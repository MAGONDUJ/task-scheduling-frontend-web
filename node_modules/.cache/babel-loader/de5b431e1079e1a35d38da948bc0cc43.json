{"ast":null,"code":"var _jsxFileName = \"/home/kim/Documents/Projects/julius/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { clearCurrentProfile } from \"./actions/profileActions\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nconst hist = createBrowserHistory(); // Check for token\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(localStorage.jwtToken); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Clear current Profile\n\n    store.dispatch(clearCurrentProfile());\n  }\n}\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/kim/Documents/Projects/julius/src/index.js"],"names":["React","ReactDOM","createBrowserHistory","Router","Route","Switch","Redirect","Provider","jwt_decode","setAuthToken","setCurrentUser","logoutUser","clearCurrentProfile","App","serviceWorker","store","hist","localStorage","jwtToken","decoded","dispatch","currentTime","Date","now","exp","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,QAAhC,QAAgD,kBAAhD;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,uBAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,IAAI,GAAGd,oBAAoB,EAAjC,C,CAEA;;AACA,IAAIe,YAAY,CAACC,QAAjB,EAA2B;AAC1B;AACAT,EAAAA,YAAY,CAACQ,YAAY,CAACC,QAAd,CAAZ,CAF0B,CAG1B;;AACA,QAAMC,OAAO,GAAGX,UAAU,CAACS,YAAY,CAACC,QAAd,CAA1B,CAJ0B,CAK1B;;AACAH,EAAAA,KAAK,CAACK,QAAN,CAAeV,cAAc,CAACS,OAAD,CAA7B,EAN0B,CAQ1B;;AACA,QAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;AACA,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC9B;AACAN,IAAAA,KAAK,CAACK,QAAN,CAAeT,UAAU,EAAzB,EAF8B,CAG9B;;AACAI,IAAAA,KAAK,CAACK,QAAN,CAAeR,mBAAmB,EAAlC;AACA;AACD;;AAEDX,QAAQ,CAACwB,MAAT,CACC,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,CADD,EAMCW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAND,E,CASA;AACA;AACA;;AACAb,aAAa,CAACc,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport jwt_decode from \"jwt-decode\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { clearCurrentProfile } from \"./actions/profileActions\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\n\nconst hist = createBrowserHistory();\n\n// Check for token\nif (localStorage.jwtToken) {\n\t// Set auth token header auth\n\tsetAuthToken(localStorage.jwtToken);\n\t// Decode token and get user info and exp\n\tconst decoded = jwt_decode(localStorage.jwtToken);\n\t// Set user and isAuthenticated\n\tstore.dispatch(setCurrentUser(decoded));\n\n\t// Check for expired token\n\tconst currentTime = Date.now() / 1000;\n\tif (decoded.exp < currentTime) {\n\t\t// Logout user\n\t\tstore.dispatch(logoutUser());\n\t\t// Clear current Profile\n\t\tstore.dispatch(clearCurrentProfile());\n\t}\n}\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}