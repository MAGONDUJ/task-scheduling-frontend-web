{"ast":null,"code":"import axios from \"../utils/axios\";\nimport { GET_ERRORS, SET_TASKS, CLEAR_ERRORS } from \"./types\";\nexport const getTasks = taskParams => dispatch => {\n  console.log(taskParams);\n  return axios.get(`/tasks/assigned?page=${taskParams.page}&limit=${taskParams.limit}&order=${taskParams.order}&orderMethod=${taskParams.orderMethod}`, {\n    headers: {\n      accessToken: `${localStorage.getItem(\"jwtToken\")}`\n    }\n  }).then(res => {\n    dispatch({\n      type: SET_TASKS,\n      payload: res.data\n    });\n    return res.data;\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/home/kim/Documents/Projects/julius/src/actions/taskActions.js"],"names":["axios","GET_ERRORS","SET_TASKS","CLEAR_ERRORS","getTasks","taskParams","dispatch","console","log","get","page","limit","order","orderMethod","headers","accessToken","localStorage","getItem","then","res","type","payload","data","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,SAApD;AAEA,OAAO,MAAMC,QAAQ,GAAGC,UAAU,IAAIC,QAAQ,IAAI;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,SAAOL,KAAK,CACVS,GADK,CAEJ,wBAAuBJ,UAAU,CAACK,IAAK,UAASL,UAAU,CAACM,KAAM,UAASN,UAAU,CAACO,KAAM,gBAAeP,UAAU,CAACQ,WAAY,EAF7H,EAGL;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,WAAW,EAAG,GAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiC;AAAnD;AAAX,GAHK,EAKLC,IALK,CAKAC,GAAG,IAAI;AACZb,IAAAA,QAAQ,CAAC;AACRc,MAAAA,IAAI,EAAElB,SADE;AAERmB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFL,KAAD,CAAR;AAKA,WAAOH,GAAG,CAACG,IAAX;AACA,GAZK,EAaLC,KAbK,CAaCC,KAAK,IAAI;AACfjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACA,GAfK,CAAP;AAgBA,CAlBM","sourcesContent":["import axios from \"../utils/axios\";\n\nimport { GET_ERRORS, SET_TASKS, CLEAR_ERRORS } from \"./types\";\n\nexport const getTasks = taskParams => dispatch => {\n\tconsole.log(taskParams);\n\treturn axios\n\t\t.get(\n\t\t\t`/tasks/assigned?page=${taskParams.page}&limit=${taskParams.limit}&order=${taskParams.order}&orderMethod=${taskParams.orderMethod}`,\n\t\t\t{ headers: { accessToken: `${localStorage.getItem(\"jwtToken\")}` } }\n\t\t)\n\t\t.then(res => {\n\t\t\tdispatch({\n\t\t\t\ttype: SET_TASKS,\n\t\t\t\tpayload: res.data\n\t\t\t});\n\n\t\t\treturn res.data;\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error);\n\t\t});\n};\n"]},"metadata":{},"sourceType":"module"}