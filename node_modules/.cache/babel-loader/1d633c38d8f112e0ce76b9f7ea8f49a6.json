{"ast":null,"code":"// import { createStore, applyMiddleware, compose } from \"redux\";\n// //import { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\"\n// import thunk from \"redux-thunk\";\n// import rootReducer from \"./reducers\";\n// const initialState = {};\n// const middleware = [thunk];\n// /********save state to local storage ****just trying****/\n// const loadState = () => {\n// \ttry {\n// \t\tconst serializedState = localStorage.getItem(\"state\");\n// \t\tif (serializedState === null) {\n// \t\t\treturn undefined;\n// \t\t}\n// \t\treturn JSON.parse(serializedState);\n// \t} catch (e) {\n// \t\treturn undefined;\n// \t}\n// };\n// const saveState = state => {\n// \ttry {\n// \t\tconst serializedState = JSON.stringify(state);\n// \t\tlocalStorage.setItem(\"state\", serializedState);\n// \t} catch (e) {\n// \t\t// Ignore write errors;\n// \t}\n// };\n// const peristedState = loadState();\n// if (window.navigator.userAgent.includes(\"Chrome\")) {\n// \tvar store = createStore(\n// \t\trootReducer,\n// \t\tperistedState,\n// \t\tcompose(\n// \t\t\tapplyMiddleware(...middleware),\n// \t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ &&\n// \t\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__()\n// \t\t)\n// \t);\n// } else {\n// \t store = createStore(\n// \t\trootReducer,\n// \t\tperistedState,\n// \t\tcompose(applyMiddleware(...middleware))\n// \t);\n// }\n// // store.subscribe(() => {\n// // \tsaveState(store.getState());\n// // });\n// /*****************  I think it worked   *********/\n// export default store;\nimport { createStore, applyMiddleware, compose } from \"redux\"; //import { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\"\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst initialState = {};\nconst middleware = [thunk];\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  var store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n} else {\n  var store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\n}\n\nexport default store;","map":{"version":3,"sources":["/home/kim/Documents/Projects/julius/src/store.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","initialState","middleware","window","navigator","userAgent","includes","store","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAKA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;;AAEA,IAAII,MAAM,CAACC,SAAP,CAAiBC,SAAjB,CAA2BC,QAA3B,CAAoC,QAApC,CAAJ,EAAmD;AACjD,MAAIC,KAAK,GAAGX,WAAW,CACrBI,WADqB,EAErBC,YAFqB,EAGrBH,OAAO,CACLD,eAAe,CAAC,GAAGK,UAAJ,CADV,EAEJC,MAAM,CAACK,4BAAP,IACCL,MAAM,CAACK,4BAAP,EAHG,CAHc,CAAvB;AASD,CAVD,MAUO;AACL,MAAID,KAAK,GAAGX,WAAW,CACrBI,WADqB,EAErBC,YAFqB,EAGrBH,OAAO,CAACD,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CAHc,CAAvB;AAKD;;AAED,eAAeK,KAAf","sourcesContent":["// import { createStore, applyMiddleware, compose } from \"redux\";\n// //import { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\"\n// import thunk from \"redux-thunk\";\n// import rootReducer from \"./reducers\";\n\n// const initialState = {};\n\n// const middleware = [thunk];\n\n// /********save state to local storage ****just trying****/\n// const loadState = () => {\n// \ttry {\n// \t\tconst serializedState = localStorage.getItem(\"state\");\n// \t\tif (serializedState === null) {\n// \t\t\treturn undefined;\n// \t\t}\n// \t\treturn JSON.parse(serializedState);\n// \t} catch (e) {\n// \t\treturn undefined;\n// \t}\n// };\n\n// const saveState = state => {\n// \ttry {\n// \t\tconst serializedState = JSON.stringify(state);\n// \t\tlocalStorage.setItem(\"state\", serializedState);\n// \t} catch (e) {\n// \t\t// Ignore write errors;\n// \t}\n// };\n\n// const peristedState = loadState();\n\n// if (window.navigator.userAgent.includes(\"Chrome\")) {\n// \tvar store = createStore(\n// \t\trootReducer,\n// \t\tperistedState,\n// \t\tcompose(\n// \t\t\tapplyMiddleware(...middleware),\n// \t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ &&\n// \t\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__()\n// \t\t)\n// \t);\n// } else {\n// \t store = createStore(\n// \t\trootReducer,\n// \t\tperistedState,\n// \t\tcompose(applyMiddleware(...middleware))\n// \t);\n// }\n\n// // store.subscribe(() => {\n// // \tsaveState(store.getState());\n// // });\n\n// /*****************  I think it worked   *********/\n\n// export default store;\n\n\n\n \nimport { createStore, applyMiddleware, compose } from \"redux\";\n//import { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\"\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  var store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n      ,window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  var store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n\n\n"]},"metadata":{},"sourceType":"module"}