{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\"; //import { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\"\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst initialState = {};\nconst middleware = [thunk];\n/********save state to local storage ****just trying****/\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {// Ignore write errors;\n  }\n};\n\nconst peristedState = loadState();\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  var store = createStore(rootReducer, peristedState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n} else {\n  var store = createStore(rootReducer, peristedState, compose(applyMiddleware(...middleware)));\n} // store.subscribe(() => {\n// \tsaveState(store.getState());\n// });\n\n/*****************  I think it worked   *********/\n\n\nexport default store;","map":{"version":3,"sources":["/home/kim/Documents/Projects/julius/src/store.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","initialState","middleware","loadState","serializedState","localStorage","getItem","undefined","JSON","parse","e","saveState","state","stringify","setItem","peristedState","window","navigator","userAgent","includes","store","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AAEA;;AACA,MAAMI,SAAS,GAAG,MAAM;AACvB,MAAI;AACH,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B;AAC7B,aAAOG,SAAP;AACA;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACA,GAND,CAME,OAAOM,CAAP,EAAU;AACX,WAAOH,SAAP;AACA;AACD,CAVD;;AAYA,MAAMI,SAAS,GAAGC,KAAK,IAAI;AAC1B,MAAI;AACH,UAAMR,eAAe,GAAGI,IAAI,CAACK,SAAL,CAAeD,KAAf,CAAxB;AACAP,IAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BV,eAA9B;AACA,GAHD,CAGE,OAAOM,CAAP,EAAU,CACX;AACA;AACD,CAPD;;AASA,MAAMK,aAAa,GAAGZ,SAAS,EAA/B;;AAEA,IAAIa,MAAM,CAACC,SAAP,CAAiBC,SAAjB,CAA2BC,QAA3B,CAAoC,QAApC,CAAJ,EAAmD;AAClD,MAAIC,KAAK,GAAGxB,WAAW,CACtBI,WADsB,EAEtBe,aAFsB,EAGtBjB,OAAO,CACND,eAAe,CAAC,GAAGK,UAAJ,CADT,EAENc,MAAM,CAACK,4BAAP,IACCL,MAAM,CAACK,4BAAP,EAHK,CAHe,CAAvB;AASA,CAVD,MAUO;AACN,MAAID,KAAK,GAAGxB,WAAW,CACtBI,WADsB,EAEtBe,aAFsB,EAGtBjB,OAAO,CAACD,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CAHe,CAAvB;AAKA,C,CAED;AACA;AACA;;AAEA;;;AAEA,eAAekB,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\n//import { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\"\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\n/********save state to local storage ****just trying****/\nconst loadState = () => {\n\ttry {\n\t\tconst serializedState = localStorage.getItem(\"state\");\n\t\tif (serializedState === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn JSON.parse(serializedState);\n\t} catch (e) {\n\t\treturn undefined;\n\t}\n};\n\nconst saveState = state => {\n\ttry {\n\t\tconst serializedState = JSON.stringify(state);\n\t\tlocalStorage.setItem(\"state\", serializedState);\n\t} catch (e) {\n\t\t// Ignore write errors;\n\t}\n};\n\nconst peristedState = loadState();\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n\tvar store = createStore(\n\t\trootReducer,\n\t\tperistedState,\n\t\tcompose(\n\t\t\tapplyMiddleware(...middleware),\n\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ &&\n\t\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__()\n\t\t)\n\t);\n} else {\n\tvar store = createStore(\n\t\trootReducer,\n\t\tperistedState,\n\t\tcompose(applyMiddleware(...middleware))\n\t);\n}\n\n// store.subscribe(() => {\n// \tsaveState(store.getState());\n// });\n\n/*****************  I think it worked   *********/\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}