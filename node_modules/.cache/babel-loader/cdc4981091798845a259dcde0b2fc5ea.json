{"ast":null,"code":"import axios from \"../utils/axios\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\"; // Login - Get User Token\n\nexport const loginUser = userData => dispatch => {\n  return axios.post(`/auth/login`, userData).then(res => {\n    // Save to localStorage\n    const token = res.data.token; // Set token to ls\n\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n\n    if (err.response) {\n      return err.response;\n    }\n  });\n};","map":{"version":3,"sources":["/home/kim/Documents/Projects/julius/src/actions/authActions.js"],"names":["axios","jwt_decode","setAuthToken","loginUser","userData","dispatch","post","then","res","token","data","localStorage","setItem","decoded","setCurrentUser","catch","err","type","GET_ERRORS","payload","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAGC,QAAQ,IAAIC,QAAQ,IAAI;AAC7C,SAAOL,KAAK,CACTM,IADI,CACE,aADF,EACgBF,QADhB,EAEJG,IAFI,CAECC,GAAG,IAAI;AACX;AACA,UAAMC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASD,KAAvB,CAFW,CAGX;;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC,EAJW,CAKX;;AACAP,IAAAA,YAAY,CAACO,KAAD,CAAZ,CANW,CAOX;;AACA,UAAMI,OAAO,GAAGZ,UAAU,CAACQ,KAAD,CAA1B,CARW,CASX;;AACAJ,IAAAA,QAAQ,CAACS,cAAc,CAACD,OAAD,CAAf,CAAR;AACD,GAbI,EAcJE,KAdI,CAcEC,GAAG,IAAI;AACZX,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEC,UADC;AAEPC,MAAAA,OAAO,EAAEH,GAAG,CAACI,QAAJ,CAAaV;AAFf,KAAD,CAAR;;AAIA,QAAIM,GAAG,CAACI,QAAR,EAAkB;AAChB,aAAOJ,GAAG,CAACI,QAAX;AACD;AACF,GAtBI,CAAP;AAuBD,CAxBI","sourcesContent":["import axios from \"../utils/axios\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n// Login - Get User Token\nexport const loginUser = userData => dispatch => {\n    return axios\n      .post(`/auth/login`, userData)\n      .then(res => {\n        // Save to localStorage\n        const token = res.data.token;\n        // Set token to ls\n        localStorage.setItem(\"jwtToken\", token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n      })\n      .catch(err => {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n        if (err.response) {\n          return err.response;\n        }\n      });\n  };"]},"metadata":{},"sourceType":"module"}