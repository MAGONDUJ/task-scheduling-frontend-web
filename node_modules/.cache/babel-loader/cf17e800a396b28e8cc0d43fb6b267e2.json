{"ast":null,"code":"import isEmpty from \"../validation/is-empty\";\nimport { SET_CURRENT_USER } from \"../actions/types\";\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return { ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Log user out\n\nexport const logoutUser = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({})); //redirect user to login page\n\n  window.location.href = \"/login\";\n};","map":{"version":3,"sources":["/home/kim/Documents/Projects/julius/src/reducers/authReducer.js"],"names":["isEmpty","SET_CURRENT_USER","initialState","isAuthenticated","user","state","action","type","payload","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","setAuthToken","window","location","href"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,wBAApB;AAEA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,KADE;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,gBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELF,QAAAA,eAAe,EAAE,CAACH,OAAO,CAACM,MAAM,CAACE,OAAR,CAFpB;AAGLJ,QAAAA,IAAI,EAAEE,MAAM,CAACE;AAHR,OAAP;;AAKF;AACE,aAAOH,KAAP;AARJ;AAUD;AAED,OAAO,MAAMI,cAAc,GAAGC,OAAO,IAAI;AACrC,SAAO;AACLH,IAAAA,IAAI,EAAEN,gBADD;AAELO,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALI,C,CAOL;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAMC,QAAQ,IAAI;AAC1C;AACAC,EAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB,EAF0C,CAG1C;;AACAC,EAAAA,YAAY,CAAC,KAAD,CAAZ,CAJ0C,CAK1C;;AACAH,EAAAA,QAAQ,CAACH,cAAc,CAAC,EAAD,CAAf,CAAR,CAN0C,CAO1C;;AACAO,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACD,CATM","sourcesContent":["import isEmpty from \"../validation/is-empty\";\n\nimport { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setCurrentUser = decoded => {\n    return {\n      type: SET_CURRENT_USER,\n      payload: decoded\n    };\n  };\n  \n  // Log user out\n  export const logoutUser = () => dispatch => {\n    // Remove token from localStorage\n    localStorage.removeItem(\"jwtToken\");\n    // Remove auth header for future requests\n    setAuthToken(false);\n    // Set current user to {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n    //redirect user to login page\n    window.location.href = \"/login\";\n  };\n"]},"metadata":{},"sourceType":"module"}