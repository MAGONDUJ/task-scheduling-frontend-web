{"ast":null,"code":"import axios from \"../utils/axios\";\nimport { GET_ERRORS, SET_TASKS, CLEAR_ERRORS } from \"./types\";\nexport const getTasks = taskParams => dispatch => {\n  console.log(taskParams);\n  return axios.get(`/tasks/assigned?page=${taskParams.page}&limit=${taskParams.limit}&order=${taskParams.order}&orderMethod=${taskParams.orderMethod}`, {\n    headers: {\n      \"accessToken\": `${localStorage.getItem(\"jwtToken\")}`\n    }\n  }).then(res => {\n    dispatch({\n      type: SET_TASKS,\n      payload: res.data\n    });\n    return res.data;\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/home/kim/Documents/Projects/julius/src/actions/taskActions.js"],"names":["axios","GET_ERRORS","SET_TASKS","CLEAR_ERRORS","getTasks","taskParams","dispatch","console","log","get","page","limit","order","orderMethod","headers","localStorage","getItem","then","res","type","payload","data","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,SAApD;AAEA,OAAO,MAAMC,QAAQ,GAAGC,UAAU,IAAIC,QAAQ,IAAI;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACH,SAAOL,KAAK,CAACS,GAAN,CAAW,wBAAuBJ,UAAU,CAACK,IAAK,UAASL,UAAU,CAACM,KAAM,UAASN,UAAU,CAACO,KAAM,gBAAeP,UAAU,CAACQ,WAAY,EAA5I,EAA+I;AAAEC,IAAAA,OAAO,EAAE;AAAC,qBAAiB,GAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiC;AAArD;AAAX,GAA/I,EAAqNC,IAArN,CAA0NC,GAAG,IAAI;AAEjOZ,IAAAA,QAAQ,CAAC;AACLa,MAAAA,IAAI,EAAEjB,SADD;AAELkB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAMA,WAAOH,GAAG,CAACG,IAAX;AACH,GATG,EASDC,KATC,CASMC,KAAD,IAAS;AACdhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACH,GAXG,CAAP;AAYA,CAdM","sourcesContent":["import axios from \"../utils/axios\";\n\nimport { GET_ERRORS, SET_TASKS, CLEAR_ERRORS } from \"./types\";\n\nexport const getTasks = taskParams => dispatch => {\n    console.log(taskParams)\n\treturn axios.get(`/tasks/assigned?page=${taskParams.page}&limit=${taskParams.limit}&order=${taskParams.order}&orderMethod=${taskParams.orderMethod}`, { headers: {\"accessToken\" : `${localStorage.getItem(\"jwtToken\")}`} }).then(res => {\n        \n        dispatch({\n            type: SET_TASKS,\n            payload: res.data\n        });\n\n\n        return res.data\n    }).catch((error)=>{\n        console.log(error)\n    })\n};\n"]},"metadata":{},"sourceType":"module"}