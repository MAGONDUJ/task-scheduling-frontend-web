import { SelectProps } from '@material-ui/core/Select';
import { TextFieldProps } from '@material-ui/core/TextField';
import { IPropsFieldBase } from '@react-form-fields/core/interfaces/props';
import { DatePickerModalProps } from 'material-ui-pickers/DatePicker/DatePickerModal';
import { DateTimePickerModalProps } from 'material-ui-pickers/DateTimePicker/DateTimePickerModal';
import { TimePickerModalProps } from 'material-ui-pickers/TimePicker/TimePickerModal';
import { HTMLAttributes, SyntheticEvent } from 'react';
export declare type TextFieldPropsResolver = {
    [K in Exclude<keyof TextFieldProps, keyof IPropsFieldBase | keyof IBaseFieldProps>]?: TextFieldProps[K];
};
export declare type SelectPropsResolver = {
    [K in Exclude<keyof SelectProps, keyof IPropsFieldBase | keyof IBaseFieldProps | 'displayEmpty' | 'placeholder'>]?: SelectProps[K];
};
export declare type DatePropsResolver = {
    [K in Exclude<keyof DatePickerModalProps, keyof IPropsFieldBase | keyof IBaseFieldProps>]?: DatePickerModalProps[K];
};
export declare type TimePropsResolver = {
    [K in Exclude<keyof TimePickerModalProps, keyof IPropsFieldBase | keyof IBaseFieldProps>]?: TimePickerModalProps[K];
};
export declare type DateTimePropsResolver = {
    [K in Exclude<keyof DateTimePickerModalProps, keyof IPropsFieldBase | keyof IBaseFieldProps>]?: DateTimePickerModalProps[K];
};
export declare type HTMLAttributesResolver<T = any> = {
    [K in Exclude<keyof HTMLAttributes<T>, keyof IPropsFieldBase | keyof IBaseFieldProps>]?: HTMLAttributes<T>[K];
};
export interface IBaseFieldProps extends IPropsFieldBase {
    label?: string;
    value: any;
    onChange: (value: any) => void;
    onBlur?: (ev: SyntheticEvent) => void;
}
