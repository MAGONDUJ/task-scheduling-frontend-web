import { AttributeFormatter, ErrorMessages, RegisterAsyncCallback, RegisterCallback } from 'validatorjs';
import { IConfig, IMask } from './context';
export default class ConfigBuilder {
    protected config: IConfig;
    constructor();
    addMask(name: string, apply: IMask['apply'], clean: IMask['clean']): this;
    addMasks(masks: IMask[]): this;
    addValidator(name: string, callback: RegisterCallback, errorMessage: string): this;
    addValidatorAsync(name: string, callback: RegisterAsyncCallback, errorMessage: string): this;
    setValidatorAttributeFormatter(func: AttributeFormatter): this;
    addCustomMessages(lang: string, customMessages: ErrorMessages): this;
    setValidationDelay(validationDelay: number): void;
    fromLang(lang: IConfig): this;
    build(): IConfig;
    clean(): this;
}
